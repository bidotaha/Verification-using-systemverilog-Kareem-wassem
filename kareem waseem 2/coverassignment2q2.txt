Coverage Report by instance with details

=================================================================================
=== Instance: /counter_tb/g
=== Design Unit: work.counter
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10        10         0   100.00%

================================Branch Details================================

Branch Coverage for instance /counter_tb/g

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File counter.v
------------------------------------IF Branch------------------------------------
    21                                        21     Count coming in to IF
    21              1                          6         if (!rst_n)
    23              1                          8         else if (!load_n)
    25              1                          6         else if (ce)
                                               1     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    26                                         6     Count coming in to IF
    26              1                          3             if (up_down)
    28              1                          3             else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    32                                        14     Count coming in to IF
    32              1                          3     assign max_count = (count_out == {WIDTH{1'b1}})? 1:0;
    32              2                         11     assign max_count = (count_out == {WIDTH{1'b1}})? 1:0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    33                                        14     Count coming in to IF
    33              1                          5     assign zero = (count_out == 0)? 1:0;
    33              2                          9     assign zero = (count_out == 0)? 1:0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         2         0   100.00%

================================Condition Details================================

Condition Coverage for instance /counter_tb/g --

  File counter.v
----------------Focused Condition View-------------------
Line       32 Item    1  (count_out == {4{{1}}})
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (count_out == {4{{1}}})         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (count_out == {4{{1}}})_0  -                             
  Row   2:          1  (count_out == {4{{1}}})_1  -                             

----------------Focused Condition View-------------------
Line       33 Item    1  (count_out == 0)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (count_out == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count_out == 0)_0    -                             
  Row   2:          1  (count_out == 0)_1    -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       7         7         0   100.00%

================================Statement Details================================

Statement Coverage for instance /counter_tb/g --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File counter.v
    8                                                module counter (clk ,rst_n, load_n, up_down, ce, data_load, count_out, max_count, zero);
    9                                                parameter WIDTH = 4;
    10                                               input clk;
    11                                               input rst_n;
    12                                               input load_n;
    13                                               input up_down;
    14                                               input ce;
    15                                               input [WIDTH-1:0] data_load;
    16                                               output reg [WIDTH-1:0] count_out;
    17                                               output max_count;
    18                                               output zero;
    19                                               
    20              1                         21     always @(posedge clk) begin
    21                                                   if (!rst_n)
    22              1                          6             count_out <= 0;
    23                                                   else if (!load_n)
    24              1                          8             count_out <= data_load;
    25                                                   else if (ce)
    26                                                       if (up_down)
    27              1                          3                 count_out <= count_out + 1;
    28                                                       else 
    29              1                          3                 count_out <= count_out - 1;
    30                                               end
    31                                               
    32              1                         15     assign max_count = (count_out == {WIDTH{1'b1}})? 1:0;
    33              1                         15     assign zero = (count_out == 0)? 1:0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         30        30         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /counter_tb/g --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                                ce           1           1      100.00 
                                               clk           1           1      100.00 
                                    count_out[3-0]           1           1      100.00 
                                    data_load[0-3]           1           1      100.00 
                                            load_n           1           1      100.00 
                                         max_count           1           1      100.00 
                                             rst_n           1           1      100.00 
                                           up_down           1           1      100.00 
                                              zero           1           1      100.00 

Total Node Count     =         15 
Toggled Node Count   =         15 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (30 of 30 bins)

=================================================================================
=== Instance: /counter_tb
=== Design Unit: work.counter_tb
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         6         4         2    66.66%

================================Branch Details================================

Branch Coverage for instance /counter_tb
NOTE: The modification timestamp for source file 'counter_tb.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File counter_tb.sv
------------------------------------IF Branch------------------------------------
    30                                        17     Count coming in to IF
    30              1                          1           if (x != count_out) begin
    34              1                         16           else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    49                                         1     Count coming in to IF
    49              1                          1            if (max_count)
    51              1                    ***0***           else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    59                                         2     Count coming in to IF
    59              1                          2            if (zero)
    61              1                    ***0***           else begin
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         1         0   100.00%

================================Condition Details================================

Condition Coverage for instance /counter_tb --
NOTE: The modification timestamp for source file 'counter_tb.sv' has been altered since compilation.

  File counter_tb.sv
----------------Focused Condition View-------------------
Line       30 Item    1  (x != count_out)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (x != count_out)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (x != count_out)_0    -                             
  Row   2:          1  (x != count_out)_1    -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      74        70         4    94.59%

================================Statement Details================================

Statement Coverage for instance /counter_tb --
NOTE: The modification timestamp for source file 'counter_tb.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File counter_tb.sv
    1                                                module counter_tb ();
    2                                                
    3                                                    parameter WIDTH = 4;
    4                                                    logic clk;
    5                                                    logic rst_n;
    6                                                    logic load_n;
    7                                                    logic up_down;
    8                                                    logic ce;
    9                                                    logic [WIDTH-1:0] data_load;
    10                                                   logic [WIDTH-1:0] count_out;
    11                                                   logic max_count;
    12                                                   logic zero;
    13                                               
    14                                               
    15                                                   int error_counter = 0;
    16                                                   int correct_counter = 0;
    17                                                
    18                                                   counter #(.WIDTH(WIDTH)) g (.*);
    19                                               
    20                                                   initial begin
    21              1                          1             clk = 0;
    22              1                          1             forever begin
    23              1                         47                 #1 clk = ~clk;
    23              2                         46     
    24                                                       end
    25                                                   end
    26                                               
    27                                                  task cheack_result (input [WIDTH-1:0] x);
    28                                                     
    29              1                         17           @(negedge clk);
    30                                                     if (x != count_out) begin
    31              1                          1              $display("%t error",$time);
    32              1                          1              error_counter++;
    33                                                     end
    34                                                     else 
    35              1                         16             correct_counter++;   
    36                                                      
    37                                                  endtask 
    38                                               
    39                                                  task cheack_reset ;
    40              1                          3             rst_n = 0;
    41              1                          3             @(negedge clk);
    42              1                          3             cheack_result (0);
    43              1                          3             rst_n = 1;
    44                                                      
    45                                                   endtask
    46                                               
    47                                                   task cheack_max ;
    48              1                          1            @(negedge clk);
    49                                                      if (max_count)
    50              1                          1              correct_counter++;
    51                                                     else begin
    52              1                    ***0***              $display("%t error",$time);        
    53              1                    ***0***             correct_counter++;         
    54                                                     end
    55                                                   endtask 
    56                                               
    57                                                   task cheack_zero ;
    58              1                          2            @(negedge clk);
    59                                                      if (zero)
    60              1                          2              correct_counter++;
    61                                                     else begin
    62              1                    ***0***              $display("%t error",$time);        
    63              1                    ***0***             correct_counter++;         
    64                                                     end
    65                                                   endtask   
    66                                               
    67                                                  initial begin
    68                                                   ///label1/////
    69              1                          1         cheack_reset;
    70                                                   //////label2////
    71              1                          1         load_n = 0;
    72              1                          1         data_load = 4'b0001;
    73              1                          1         cheack_result (data_load);
    74              1                          1         load_n = 1;
    75                                                   ///label1/////
    76              1                          1         cheack_reset;    
    77                                                   ////////label3//////
    78              1                          1         ce = 1;
    79              1                          1         up_down = 0;
    80              1                          1         cheack_result (count_out-1);
    81                                                   up_down = 1;
    82              1                          1         cheack_result(count_out +1);    
    83              1                          1         //////label4////
    84              1                          1         ce = 0;
    85              1                          1         load_n = 0;
    86              1                          1         data_load = 4'b0000;
    87                                                   cheack_result (data_load);
    88              1                          1         cheack_zero ;
    89              1                          1         load_n = 1;
    90              1                          1         //////label4////
    91              1                          1         ce = 1;
    92              1                          1         load_n = 0;
    93              1                          1         data_load = 4'b0000;
    94                                                   cheack_result (data_load);
    95              1                          1         cheack_zero ;
    96              1                          1         load_n = 1;    
    97              1                          1         ////////label5//////
    98              1                          1         up_down = 0;
    99              1                          1         cheack_result (count_out-1);
    100             1                          1         up_down = 1;
    101                                                  cheack_result(count_out +1);
    102             1                          1         //////label6////
    103             1                          1         load_n = 0;
    104             1                          1         data_load = 4'b0100;
    105             1                          1         cheack_result (data_load);
    106                                                  load_n = 1;
    107             1                          1         ////////label7//////
    108             1                          1         up_down = 0;
    109             1                          1         cheack_result (count_out-1);
    110             1                          1         up_down = 1;
    111                                                  cheack_result(count_out +1);
    112             1                          1         //////label8////
    113             1                          1         load_n = 0;
    114             1                          1         data_load = 4'b1111;
    115             1                          1         cheack_result (data_load);
    116                                                  cheack_max ;
    117             1                          1         load_n = 1;    
    118             1                          1         //////label6////
    119             1                          1         load_n = 0;
    120             1                          1         data_load = 4'b0010;
    121             1                          1         cheack_result (data_load);
    122                                                  load_n = 1;   
    123             1                          1         //////label6////
    124             1                          1         load_n = 0;
    125             1                          1         data_load = 4'b1100;
    126             1                          1         cheack_result (data_load);
    127                                                  load_n = 1;     
    128             1                          1         ///label1/////
    129             1                          1         cheack_reset;    
    130             1                          1         
    131             1                          1         
    132                                                  $display("error_counter = %d  correct_counter = %d",error_counter,correct_counter);
    133             1                          1         $stop;
    134                                                 end    
    135                                              endmodule
    1                                                module counter_tb ();
    2                                                
    3                                                    parameter WIDTH = 4;
    4                                                    logic clk;
    5                                                    logic rst_n;
    6                                                    logic load_n;
    7                                                    logic up_down;
    8                                                    logic ce;
    9                                                    logic [WIDTH-1:0] data_load;
    10                                                   logic [WIDTH-1:0] count_out;
    11                                                   logic max_count;
    12                                                   logic zero;
    13                                               
    14                                               
    15                                                   int error_counter = 0;
    16                                                   int correct_counter = 0;
    17                                                
    18                                                   counter #(.WIDTH(WIDTH)) g (.*);
    19                                               
    20                                                   initial begin
    21                                                       clk = 0;
    22                                                       forever begin
    23                                                           #1 clk = ~clk;
    24                                                       end
    25                                                   end
    26                                               
    27                                                  task cheack_result (input [WIDTH-1:0] x);
    28                                                     
    29                                                     @(negedge clk);
    30                                                     if (x != count_out) begin
    31                                                        $display("%t error",$time);
    32                                                        error_counter++;
    33                                                     end
    34                                                     else 
    35                                                       correct_counter++;   
    36                                                      
    37                                                  endtask 
    38                                               
    39                                                  task cheack_reset ;
    40                                                       rst_n = 0;
    41                                                       @(negedge clk);
    42                                                       cheack_result (0);
    43                                                       rst_n = 1;
    44                                                      
    45                                                   endtask
    46                                               
    47                                                   task cheack_max ;
    48                                                      @(negedge clk);
    49                                                      if (max_count)
    50                                                        correct_counter++;
    51                                                     else begin
    52                                                        $display("%t error",$time);        
    53                                                       correct_counter++;         
    54                                                     end
    55                                                   endtask 
    56                                               
    57                                                   task cheack_zero ;
    58                                                      @(negedge clk);
    59                                                      if (zero)
    60                                                        correct_counter++;
    61                                                     else begin
    62                                                        $display("%t error",$time);        
    63                                                       correct_counter++;         
    64                                                     end
    65                                                   endtask   
    66                                               
    67                                                  initial begin
    68                                                   ///label1/////
    69                                                   cheack_reset;
    70                                                   //////label2////
    71                                                   load_n = 0;
    72                                                   data_load = 4'b0001;
    73                                                   cheack_result (data_load);
    74                                                   load_n = 1;
    75                                                   ///label1/////
    76                                                   cheack_reset;    
    77                                                   ////////label3//////
    78                                                   ce = 1;
    79                                                   up_down = 0;
    80                                                   cheack_result (count_out-1);
    81                                                   up_down = 1;
    82                                                   cheack_result(count_out +1);    
    83                                                   //////label4////
    84                                                   ce = 0;
    85                                                   load_n = 0;
    86                                                   data_load = 4'b0000;
    87                                                   cheack_result (data_load);
    88                                                   cheack_zero ;
    89                                                   load_n = 1;
    90                                                   //////label4////
    91                                                   ce = 1;
    92                                                   load_n = 0;
    93                                                   data_load = 4'b0000;
    94                                                   cheack_result (data_load);
    95                                                   cheack_zero ;
    96                                                   load_n = 1;    
    97                                                   ////////label5//////
    98                                                   up_down = 0;
    99                                                   cheack_result (count_out-1);
    100                                                  up_down = 1;
    101                                                  cheack_result(count_out +1);
    102                                                  //////label6////
    103                                                  load_n = 0;
    104                                                  data_load = 4'b0100;
    105                                                  cheack_result (data_load);
    106                                                  load_n = 1;
    107                                                  ////////label7//////
    108                                                  up_down = 0;
    109                                                  cheack_result (count_out-1);
    110                                                  up_down = 1;
    111                                                  cheack_result(count_out +1);
    112                                                  //////label8////
    113                                                  load_n = 0;
    114                                                  data_load = 4'b1111;
    115                                                  cheack_result (data_load);
    116                                                  cheack_max ;
    117                                                  load_n = 1;    
    118                                                  //////label6////
    119                                                  load_n = 0;
    120                                                  data_load = 4'b0010;
    121                                                  cheack_result (data_load);
    122                                                  load_n = 1;   
    123                                                  //////label6////
    124                                                  load_n = 0;
    125                                                  data_load = 4'b1100;
    126                                                  cheack_result (data_load);
    127                                                  load_n = 1;     
    128                                                  ///label1/////
    129                                                  cheack_reset;    
    130                                                  
    131                                                  
    132                                                  $display("error_counter = %d  correct_counter = %d",error_counter,correct_counter);
    133                                                  $stop;
    134                                                 end    
    135                                              endmodule

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        158        40       118    25.31%

================================Toggle Details================================

Toggle Coverage for instance /counter_tb --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                                ce           1           1      100.00 
                                               clk           1           1      100.00 
                              correct_counter[0-3]           1           1      100.00 
                                correct_counter[4]           0           1       50.00 
                             correct_counter[5-31]           0           0        0.00 
                                    count_out[0-3]           1           1      100.00 
                                    data_load[0-3]           1           1      100.00 
                                  error_counter[0]           0           1       50.00 
                               error_counter[1-31]           0           0        0.00 
                                            load_n           1           1      100.00 
                                         max_count           1           1      100.00 
                                             rst_n           1           1      100.00 
                                           up_down           1           1      100.00 
                                              zero           1           1      100.00 

Total Node Count     =         79 
Toggled Node Count   =         19 
Untoggled Node Count =         60 

Toggle Coverage      =      25.31% (40 of 158 bins)


Total Coverage By Instance (filtered view): 79.94%

