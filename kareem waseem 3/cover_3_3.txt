Coverage Report by instance with details

=================================================================================
=== Instance: /ALSU_tb/o1
=== Design Unit: work.ALSU
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        32        26         6    81.25%

================================Branch Details================================

Branch Coverage for instance /ALSU_tb/o1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.v
------------------------------------IF Branch------------------------------------
    24                                    908915     Count coming in to IF
    24              1                      17907       if(rst) begin
    35              1                     891008       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    51                                   1809513     Count coming in to IF
    51              1                      18501       if(rst) begin
    53              1                    1791012       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    54                                   1791012     Count coming in to IF
    54              1                     555981           if (invalid)
    56              1                    1235031           else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    63                                    908710     Count coming in to IF
    63              1                      17886       if(rst) begin
    66              1                     890824       else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    67                                    890824     Count coming in to IF
    67              1                      34775         if (bypass_A_reg && bypass_B_reg)
    69              1                     141366         else if (bypass_A_reg)
    71              1                     140751         else if (bypass_B_reg)
    73              1                     356099         else if (invalid) 
    75              1                     217833         else begin
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    76                                    217833     Count coming in to CASE
    77              1                    ***0***               3'h0: begin 
    87              1                      40449               3'h1: begin
    97              1                      40312               3'h2: begin
    103             1                      40424               3'h3: out <= A_reg * B_reg;
    104             1                      39879               3'h4: begin
    110             1                      40106               3'h5: begin
                                           16663     All False Count
Branch totals: 6 hits of 7 branches = 85.71%

------------------------------------IF Branch------------------------------------
    78                                   ***0***     Count coming in to IF
    78              1                    ***0***                 if (red_op_A_reg && red_op_B_reg)
    80              1                    ***0***                 else if (red_op_A_reg) 
    82              1                    ***0***                 else if (red_op_B_reg)
    84              1                    ***0***                 else 
Branch totals: 0 hits of 4 branches = 0.00%

------------------------------------IF Branch------------------------------------
    88                                     40449     Count coming in to IF
    88              1                    ***0***                 if (red_op_A_reg && red_op_B_reg)
    90              1                       3253                 else if (red_op_A_reg) 
    92              1                       3262                 else if (red_op_B_reg)
    94              1                      33934                 else 
Branch totals: 3 hits of 4 branches = 75.00%

------------------------------------IF Branch------------------------------------
    105                                    39879     Count coming in to IF
    105             1                      19237                 if (direction_reg)
    107             1                      20642                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    111                                    40106     Count coming in to IF
    111             1                      19292                 if (direction_reg)
    113             1                      20814                 else
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         2         4    33.33%

================================Condition Details================================

Condition Coverage for instance /ALSU_tb/o1 --

  File ALSU.v
----------------Focused Condition View-------------------
Line       67 Item    1  (bypass_A_reg && bypass_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         Y
  bypass_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        -                             
  Row   2:          1  bypass_A_reg_1        bypass_B_reg                  
  Row   3:          1  bypass_B_reg_0        bypass_A_reg                  
  Row   4:          1  bypass_B_reg_1        bypass_A_reg                  

----------------Focused Condition View-------------------
Line       78 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 0 of 2 input terms covered = 0.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         N  No hits                  Hit '_0' and '_1'
  red_op_B_reg         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  red_op_A_reg_0        -                             
  Row   2:    ***0***  red_op_A_reg_1        red_op_B_reg                  
  Row   3:    ***0***  red_op_B_reg_0        red_op_A_reg                  
  Row   4:    ***0***  red_op_B_reg_1        red_op_A_reg                  

----------------Focused Condition View-------------------
Line       88 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 0 of 2 input terms covered = 0.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         N  '_1' not hit             Hit '_1'
  red_op_B_reg         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:    ***0***  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:    ***0***  red_op_B_reg_1        red_op_A_reg                  


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      8         8         0   100.00%

================================Expression Details================================

Expression Coverage for instance /ALSU_tb/o1 --

  File ALSU.v
----------------Focused Expression View-----------------
Line       18 Item    1  ((red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]))
Expression totals: 4 of 4 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   red_op_A_reg         Y
   red_op_B_reg         Y
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   2:          1  red_op_A_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   3:          1  red_op_B_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   4:          1  red_op_B_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   5:          1  opcode_reg[1]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   6:          1  opcode_reg[1]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   7:          1  opcode_reg[2]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])
  Row   8:          1  opcode_reg[2]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])

----------------Focused Expression View-----------------
Line       19 Item    1  (opcode_reg[1] & opcode_reg[2])
Expression totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  opcode_reg[1]_0       opcode_reg[2]                 
  Row   2:          1  opcode_reg[1]_1       opcode_reg[2]                 
  Row   3:          1  opcode_reg[2]_0       opcode_reg[1]                 
  Row   4:          1  opcode_reg[2]_1       opcode_reg[1]                 

----------------Focused Expression View-----------------
Line       20 Item    1  (invalid_red_op | invalid_opcode)
Expression totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      ~invalid_opcode               
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:          1  invalid_opcode_1      ~invalid_red_op               


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      48        43         5    89.58%

================================Statement Details================================

Statement Coverage for instance /ALSU_tb/o1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.v
    1                                                module ALSU(A, B, cin, serial_in, red_op_A, red_op_B, opcode, bypass_A, bypass_B, clk, rst, direction, leds, out);
    2                                                parameter INPUT_PRIORITY = "A";
    3                                                parameter FULL_ADDER = "ON";
    4                                                input clk, cin, rst, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    5                                                input [2:0] opcode;
    6                                                input signed [2:0] A, B;
    7                                                output reg [15:0] leds;
    8                                                output reg signed [5:0] out;
    9                                                
    10                                               reg red_op_A_reg, red_op_B_reg, bypass_A_reg, bypass_B_reg, direction_reg, serial_in_reg;
    11                                               reg signed cin_reg;
    12                                               reg [2:0] opcode_reg;
    13                                               reg signed [2:0] A_reg, B_reg;
    14                                               
    15                                               wire invalid_red_op, invalid_opcode, invalid;
    16                                               
    17                                               //Invalid handling
    18              1                     854105     assign invalid_red_op = (red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]);
    19              1                     746835     assign invalid_opcode = opcode_reg[1] & opcode_reg[2];
    20              1                     499106     assign invalid = invalid_red_op | invalid_opcode;
    21                                               
    22                                               //Registering input signals
    23              1                     908915     always @(posedge clk or posedge rst) begin
    24                                                 if(rst) begin
    25              1                      17907          cin_reg <= 0;
    26              1                      17907          red_op_B_reg <= 0;
    27              1                      17907          red_op_A_reg <= 0;
    28              1                      17907          bypass_B_reg <= 0;
    29              1                      17907          bypass_A_reg <= 0;
    30              1                      17907          direction_reg <= 0;
    31              1                      17907          serial_in_reg <= 0;
    32              1                      17907          opcode_reg <= 0;
    33              1                      17907          A_reg <= 0;
    34              1                      17907          B_reg <= 0;
    35                                                 end else begin
    36              1                     891008          cin_reg <= cin;
    37              1                     891008          red_op_B_reg <= red_op_B;
    38              1                     891008          red_op_A_reg <= red_op_A;
    39              1                     891008          bypass_B_reg <= bypass_B;
    40              1                     891008          bypass_A_reg <= bypass_A;
    41              1                     891008          direction_reg <= direction;
    42              1                     891008          serial_in_reg <= serial_in;
    43              1                     891008          opcode_reg <= opcode;
    44              1                     891008          A_reg <= A;
    45              1                     891008          B_reg <= B;
    46                                                 end
    47                                               end
    48                                               
    49                                               //leds output blinking 
    50              1                    1809513     always @(posedge clk or posedge rst) begin
    51                                                 if(rst) begin
    52              1                      18501          leds <= 0;
    53                                                 end else begin
    54                                                     if (invalid)
    55              1                     555981             leds <= ~leds;
    56                                                     else
    57              1                    1235031             leds <= 0;
    58                                                 end
    59                                               end
    60                                               
    61                                               //ALSU output processing
    62              1                     908710     always @(posedge clk or posedge rst) begin
    63                                                 if(rst) begin
    64              1                      17886         out <= 0;
    65                                                 end
    66                                                 else begin
    67                                                   if (bypass_A_reg && bypass_B_reg)
    68              1                      34775           out <= (INPUT_PRIORITY == "A")? A_reg: B_reg;
    69                                                   else if (bypass_A_reg)
    70              1                     141366           out <= A_reg;
    71                                                   else if (bypass_B_reg)
    72              1                     140751           out <= B_reg;
    73                                                   else if (invalid) 
    74              1                     356099             out <= 0;
    75                                                   else begin
    76                                                       case (opcode)
    77                                                         3'h0: begin 
    78                                                           if (red_op_A_reg && red_op_B_reg)
    79              1                    ***0***                   out <= (INPUT_PRIORITY == "A")? |A_reg: |B_reg;
    80                                                           else if (red_op_A_reg) 
    81              1                    ***0***                   out <= |A_reg;
    82                                                           else if (red_op_B_reg)
    83              1                    ***0***                   out <= |B_reg;
    84                                                           else 
    85              1                    ***0***                   out <= A_reg | B_reg;
    86                                                         end
    87                                                         3'h1: begin
    88                                                           if (red_op_A_reg && red_op_B_reg)
    89              1                    ***0***                   out <= (INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;
    90                                                           else if (red_op_A_reg) 
    91              1                       3253                   out <= ^A_reg;
    92                                                           else if (red_op_B_reg)
    93              1                       3262                   out <= ^B_reg;
    94                                                           else 
    95              1                      33934                   out <= A_reg ^ B_reg;
    96                                                         end
    97                                                         3'h2: begin
    98                                                                        if (FULL_ADDER == "ON")
    99              1                      40312                                 out <= A_reg+B_reg+cin_reg;
    100                                                                       else if (FULL_ADDER == "OFF")
    101                                                                          out <= A_reg+B_reg;   
    102                                                              end 
    103             1                      40424               3'h3: out <= A_reg * B_reg;
    104                                                        3'h4: begin
    105                                                          if (direction_reg)
    106             1                      19237                   out <= {out[4:0], serial_in_reg};
    107                                                          else
    108             1                      20642                   out <= {serial_in_reg, out[5:1]};
    109                                                        end
    110                                                        3'h5: begin
    111                                                          if (direction_reg)
    112             1                      19292                   out <= {out[4:0], out[5]};
    113                                                          else
    114             1                      20814                   out <= {out[0], out[5:1]};

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        118       118         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /ALSU_tb/o1 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                            A[0-2]           1           1      100.00 
                                        A_reg[2-0]           1           1      100.00 
                                            B[0-2]           1           1      100.00 
                                        B_reg[2-0]           1           1      100.00 
                                          bypass_A           1           1      100.00 
                                      bypass_A_reg           1           1      100.00 
                                          bypass_B           1           1      100.00 
                                      bypass_B_reg           1           1      100.00 
                                               cin           1           1      100.00 
                                           cin_reg           1           1      100.00 
                                               clk           1           1      100.00 
                                         direction           1           1      100.00 
                                     direction_reg           1           1      100.00 
                                           invalid           1           1      100.00 
                                    invalid_opcode           1           1      100.00 
                                    invalid_red_op           1           1      100.00 
                                        leds[15-0]           1           1      100.00 
                                       opcode[0-2]           1           1      100.00 
                                   opcode_reg[2-0]           1           1      100.00 
                                          out[5-0]           1           1      100.00 
                                          red_op_A           1           1      100.00 
                                      red_op_A_reg           1           1      100.00 
                                          red_op_B           1           1      100.00 
                                      red_op_B_reg           1           1      100.00 
                                               rst           1           1      100.00 
                                         serial_in           1           1      100.00 
                                     serial_in_reg           1           1      100.00 

Total Node Count     =         59 
Toggled Node Count   =         59 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (118 of 118 bins)

=================================================================================
=== Instance: /ALSU_tb/O4
=== Design Unit: work.ALSU_golden_model
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        30        26         4    86.66%

================================Branch Details================================

Branch Coverage for instance /ALSU_tb/O4

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_golden_model.v
------------------------------------IF Branch------------------------------------
    20                                    908915     Count coming in to IF
    20              1                      17907       if(rst) begin
    31              1                     891008       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    46                                   1809513     Count coming in to IF
    46              1                      18501       if(rst) begin
    48              1                    1791012       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    49                                   1791012     Count coming in to IF
    49              1                     555981           if (invalid)
    51              1                    1235031           else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                    908710     Count coming in to IF
    57              1                      17886             if (rst) begin
    60              1                     890824             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    61                                    890824     Count coming in to IF
    61              1                      34775         if (bypass_A_reg && bypass_B_reg)
    63              1                     141366         else if (bypass_A_reg)
    65              1                     140751         else if (bypass_B_reg)
    67              1                     356099         else if (invalid) 
    69              1                     217833                 else begin
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    71                                    217833     Count coming in to CASE
    72              1                    ***0***                     3'b000 : begin
    86              1                      40449                     3'b001 : begin
    96              1                      40312                     3'b010 : begin
    102             1                      40424                     3'b011 : out <= A_reg * B_reg; 
    103             1                      39879                     3'b100 : begin
    109             1                      40106                     3'b101 : begin
                                           16663     All False Count
Branch totals: 6 hits of 7 branches = 85.71%

------------------------------------IF Branch------------------------------------
    74                                   ***0***     Count coming in to IF
    74              1                    ***0***                              if (red_op_A_reg)
    76              1                    ***0***                              else 
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    87                                     40449     Count coming in to IF
    87              1                    ***0***                 if (red_op_A_reg && red_op_B_reg)
    89              1                       3253                 else if (red_op_A_reg) 
    91              1                       3262                 else if (red_op_B_reg)
    93              1                      33934                 else 
Branch totals: 3 hits of 4 branches = 75.00%

------------------------------------IF Branch------------------------------------
    104                                    39879     Count coming in to IF
    104             1                      19237                              if (direction_reg)
    106             1                      20642                              else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    110                                    40106     Count coming in to IF
    110             1                      19292                              if (direction_reg)
    112             1                      20814                              else 
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         2         2    50.00%

================================Condition Details================================

Condition Coverage for instance /ALSU_tb/O4 --

  File ALSU_golden_model.v
----------------Focused Condition View-------------------
Line       61 Item    1  (bypass_A_reg && bypass_B_reg)
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         Y
  bypass_B_reg         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        -                             
  Row   2:          1  bypass_A_reg_1        bypass_B_reg                  
  Row   3:          1  bypass_B_reg_0        bypass_A_reg                  
  Row   4:          1  bypass_B_reg_1        bypass_A_reg                  

----------------Focused Condition View-------------------
Line       87 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 0 of 2 input terms covered = 0.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         N  '_1' not hit             Hit '_1'
  red_op_B_reg         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:    ***0***  red_op_A_reg_1        red_op_B_reg                  
  Row   3:          1  red_op_B_reg_0        red_op_A_reg                  
  Row   4:    ***0***  red_op_B_reg_1        red_op_A_reg                  


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      8         8         0   100.00%

================================Expression Details================================

Expression Coverage for instance /ALSU_tb/O4 --

  File ALSU_golden_model.v
----------------Focused Expression View-----------------
Line       15 Item    1  ((red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]))
Expression totals: 4 of 4 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   red_op_A_reg         Y
   red_op_B_reg         Y
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   2:          1  red_op_A_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   3:          1  red_op_B_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   4:          1  red_op_B_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   5:          1  opcode_reg[1]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   6:          1  opcode_reg[1]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   7:          1  opcode_reg[2]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])
  Row   8:          1  opcode_reg[2]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])

----------------Focused Expression View-----------------
Line       16 Item    1  (opcode_reg[1] & opcode_reg[2])
Expression totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  opcode_reg[1]         Y
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  opcode_reg[1]_0       opcode_reg[2]                 
  Row   2:          1  opcode_reg[1]_1       opcode_reg[2]                 
  Row   3:          1  opcode_reg[2]_0       opcode_reg[1]                 
  Row   4:          1  opcode_reg[2]_1       opcode_reg[1]                 

----------------Focused Expression View-----------------
Line       17 Item    1  (invalid_red_op | invalid_opcode)
Expression totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      ~invalid_opcode               
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:          1  invalid_opcode_1      ~invalid_red_op               


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      46        43         3    93.47%

================================Statement Details================================

Statement Coverage for instance /ALSU_tb/O4 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_golden_model.v
    1                                                module ALSU_golden_model #( parameter INPUT_PRIORITY = "A",
    2                                                               parameter FULL_ADDER = "ON")
    3                                                             ( output reg [5:0] out,
    4                                                               output reg [15:0] leds,
    5                                                               input [2:0] A,B,opcode,
    6                                                               input clk,rst,cin,serial_in,red_op_A,red_op_B,bypass_A,bypass_B,direction);
    7                                                
    8                                                reg red_op_A_reg, red_op_B_reg, bypass_A_reg, bypass_B_reg, direction_reg, serial_in_reg;
    9                                                reg signed cin_reg;
    10                                               reg [2:0] opcode_reg;
    11                                               reg signed [2:0] A_reg, B_reg;
    12                                               
    13                                               wire invalid_red_op, invalid_opcode, invalid;
    14                                               
    15              1                     854105     assign invalid_red_op = (red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]);
    16              1                     746835     assign invalid_opcode = opcode_reg[1] & opcode_reg[2];
    17              1                     499106     assign invalid = invalid_red_op | invalid_opcode;
    18                                               
    19              1                     908915     always @(posedge clk or posedge rst) begin
    20                                                 if(rst) begin
    21              1                      17907          cin_reg <= 0;
    22              1                      17907          red_op_B_reg <= 0;
    23              1                      17907          red_op_A_reg <= 0;
    24              1                      17907          bypass_B_reg <= 0;
    25              1                      17907          bypass_A_reg <= 0;
    26              1                      17907          direction_reg <= 0;
    27              1                      17907          serial_in_reg <= 0;
    28              1                      17907          opcode_reg <= 0;
    29              1                      17907          A_reg <= 0;
    30              1                      17907          B_reg <= 0;
    31                                                 end else begin
    32              1                     891008          cin_reg <= cin;
    33              1                     891008          red_op_B_reg <= red_op_B;
    34              1                     891008          red_op_A_reg <= red_op_A;
    35              1                     891008          bypass_B_reg <= bypass_B;
    36              1                     891008          bypass_A_reg <= bypass_A;
    37              1                     891008          direction_reg <= direction;
    38              1                     891008          serial_in_reg <= serial_in;
    39              1                     891008          opcode_reg <= opcode;
    40              1                     891008          A_reg <= A;
    41              1                     891008          B_reg <= B;
    42                                                 end
    43                                               end
    44                                               
    45              1                    1809513     always @(posedge clk or posedge rst) begin
    46                                                 if(rst) begin
    47              1                      18501          leds <= 0;
    48                                                 end else begin
    49                                                     if (invalid)
    50              1                     555981             leds <= ~leds;
    51                                                     else
    52              1                    1235031             leds <= 0;
    53                                                 end
    54                                               end
    55                                               
    56              1                     908710         always @(posedge clk , posedge rst) begin
    57                                                       if (rst) begin
    58              1                      17886                out <= 0;
    59                                                       end
    60                                                       else begin
    61                                                   if (bypass_A_reg && bypass_B_reg)
    62              1                      34775           out <= (INPUT_PRIORITY == "A")? A_reg: B_reg;
    63                                                   else if (bypass_A_reg)
    64              1                     141366           out <= A_reg;
    65                                                   else if (bypass_B_reg)
    66              1                     140751           out <= B_reg;
    67                                                   else if (invalid) 
    68              1                     356099             out <= 0;              
    69                                                           else begin
    70                                                                  
    71                                                           case (opcode)
    72                                                               3'b000 : begin
    73                                                               if (INPUT_PRIORITY == "A") begin                   
    74                                                                        if (red_op_A_reg)
    75              1                    ***0***                                 out <= |A_reg;
    76                                                                        else 
    77              1                    ***0***                                 out <= A_reg|B_reg;   
    78                                                               end
    79                                                               else if (INPUT_PRIORITY == "B") begin
    80                                                                        if (red_op_B_reg)
    81                                                                           out <= |B_reg;
    82                                                                        else 
    83                                                                           out <= A_reg|B_reg; 
    84                                                               end          
    85                                                               end
    86                                                               3'b001 : begin
    87                                                           if (red_op_A_reg && red_op_B_reg)
    88              1                    ***0***                   out <= (INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;
    89                                                           else if (red_op_A_reg) 
    90              1                       3253                   out <= ^A_reg;
    91                                                           else if (red_op_B_reg)
    92              1                       3262                   out <= ^B_reg;
    93                                                           else 
    94              1                      33934                   out <= A_reg ^ B_reg;
    95                                                         end
    96                                                               3'b010 : begin
    97                                                                        if (FULL_ADDER == "ON")
    98              1                      40312                                 out <= A_reg + B_reg + cin_reg;
    99                                                                        else if (FULL_ADDER == "OFF")
    100                                                                          out <= A_reg + B_reg;   
    101                                                              end 
    102             1                      40424                     3'b011 : out <= A_reg * B_reg; 
    103                                                              3'b100 : begin
    104                                                                       if (direction_reg)
    105             1                      19237                                 out <= {out[4:0],serial_in_reg};
    106                                                                       else 
    107             1                      20642                              out <= {serial_in_reg,out[5:1]};
    108                                                              end
    109                                                              3'b101 : begin
    110                                                                       if (direction_reg)
    111             1                      19292                                 out <= {out[4:0],out[5]};
    112                                                                       else 
    113             1                      20814                              out <= {out[0],out[5:1]};

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        118       118         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /ALSU_tb/O4 --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                            A[0-2]           1           1      100.00 
                                        A_reg[2-0]           1           1      100.00 
                                            B[0-2]           1           1      100.00 
                                        B_reg[2-0]           1           1      100.00 
                                          bypass_A           1           1      100.00 
                                      bypass_A_reg           1           1      100.00 
                                          bypass_B           1           1      100.00 
                                      bypass_B_reg           1           1      100.00 
                                               cin           1           1      100.00 
                                           cin_reg           1           1      100.00 
                                               clk           1           1      100.00 
                                         direction           1           1      100.00 
                                     direction_reg           1           1      100.00 
                                           invalid           1           1      100.00 
                                    invalid_opcode           1           1      100.00 
                                    invalid_red_op           1           1      100.00 
                                        leds[15-0]           1           1      100.00 
                                       opcode[0-2]           1           1      100.00 
                                   opcode_reg[2-0]           1           1      100.00 
                                          out[5-0]           1           1      100.00 
                                          red_op_A           1           1      100.00 
                                      red_op_A_reg           1           1      100.00 
                                          red_op_B           1           1      100.00 
                                      red_op_B_reg           1           1      100.00 
                                               rst           1           1      100.00 
                                         serial_in           1           1      100.00 
                                     serial_in_reg           1           1      100.00 

Total Node Count     =         59 
Toggled Node Count   =         59 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (118 of 118 bins)

=================================================================================
=== Instance: /ALSU_tb
=== Design Unit: work.ALSU_tb
=================================================================================

Assertion Coverage:
    Assertions                       3         3         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/ALSU_tb/#ublk#102282978#78/immed__79
                     ALSU_tb.sv(79)                     0          1
/ALSU_tb/#ublk#102282978#105/immed__106
                     ALSU_tb.sv(106)                    0          1
/ALSU_tb/#anonblk#102282978#120#2#/#ublk#102282978#122/immed__123
                     ALSU_tb.sv(123)                    0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         3         1    75.00%

================================Branch Details================================

Branch Coverage for instance /ALSU_tb
NOTE: The modification timestamp for source file 'ALSU_tb.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_tb.sv
------------------------------------IF Branch------------------------------------
    59                                   1800612     Count coming in to IF
    59              1                    1470991                    if (!rst && !bypass_A && !bypass_B) begin
                                          329621     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    136                                  1800603     Count coming in to IF
    136             1                    ***0***           if ((out_ex != out) || (leds_ex != leds)) begin
    140             1                    1800603           else 
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       5         3         2    60.00%

================================Condition Details================================

Condition Coverage for instance /ALSU_tb --
NOTE: The modification timestamp for source file 'ALSU_tb.sv' has been altered since compilation.

  File ALSU_tb.sv
----------------Focused Condition View-------------------
Line       59 Item    1  ((rst ~| bypass_A) && ~bypass_B)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
         rst         Y
    bypass_A         Y
    bypass_B         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rst_0                 (~bypass_B && ~bypass_A)      
  Row   2:          1  rst_1                 ~bypass_A                     
  Row   3:          1  bypass_A_0            (~bypass_B && ~rst)           
  Row   4:          1  bypass_A_1            ~rst                          
  Row   5:          1  bypass_B_0            (rst ~| bypass_A)             
  Row   6:          1  bypass_B_1            (rst ~| bypass_A)             

----------------Focused Condition View-------------------
Line       136 Item    1  ((out_ex != out) || (leds_ex != leds))
Condition totals: 0 of 2 input terms covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
    (out_ex != out)         N  '_1' not hit             Hit '_1'
  (leds_ex != leds)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (out_ex != out)_0     ~(leds_ex != leds)            
  Row   2:    ***0***  (out_ex != out)_1     -                             
  Row   3:          1  (leds_ex != leds)_0   ~(out_ex != out)              
  Row   4:    ***0***  (leds_ex != leds)_1   ~(out_ex != out)              



Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          5        na        na        na
            Covergroup Bins         17        17         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /ALSU_tb/ALSU_G                                 100.00%        100          -    Covered              
    covered/total bins:                                    17         17          -                      
    missing/total bins:                                     0         17          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint label_A                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint label_A_red_op                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint label_B                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint label_B_red_op                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint label_opcode                           100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/ALSU_tb/my_alu_g               100.00%        100          -    Covered              
    covered/total bins:                                    17         17          -                      
    missing/total bins:                                     0         17          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint label_A                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                  2475270          1          -    Covered              
        bin A_data_max                                 113796          1          -    Covered              
        bin A_data_min                                 114206          1          -    Covered              
        default bin A_data_default                     568331                     -    Occurred             
    Coverpoint label_A_red_op                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_walking_ones[1]                      64062          1          -    Covered              
        bin A_data_walking_ones[2]                      64118          1          -    Covered              
    Coverpoint label_B                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_0                                  2475129          1          -    Covered              
        bin B_data_max                                 113446          1          -    Covered              
        bin B_data_min                                 113353          1          -    Covered              
        default bin B_data_default                     569675                     -    Occurred             
    Coverpoint label_B_red_op                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_walking_ones[1]                      63960          1          -    Covered              
        bin B_data_walking_ones[2]                      63774          1          -    Covered              
    Coverpoint label_opcode                           100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin bin_invalid[6]                      56681                     -    Occurred             
        illegal_bin bin_invalid[7]                      55807                     -    Occurred             
        bin bin_shift[4]                               271624          1          -    Covered              
        bin bin_shift[5]                               270690          1          -    Covered              
        bin bin_arith[2]                               272369          1          -    Covered              
        bin bin_arith[3]                              2071863          1          -    Covered              
        bin bin_bitwise[0]                                201          1          -    Covered              
        bin bin_bitwise[1]                             272366          1          -    Covered              
        bin opcode_tr                                       1          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      52        50         2    96.15%

================================Statement Details================================

Statement Coverage for instance /ALSU_tb --
NOTE: The modification timestamp for source file 'ALSU_tb.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_tb.sv
    3                                                module ALSU_tb ();
    4                                                    parameter INPUT_PRIORITY = "A";
    5                                                    parameter FULL_ADDER = "ON";
    6                                                    logic clk, cin, rst, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    7                                                    logic [2:0] opcode;
    8                                                    logic signed [2:0] A, B;
    9                                                    logic [15:0] leds;
    10                                                   bit [15:0] leds_ex;
    11                                                   logic [5:0] out;
    12                                                   bit [5:0] out_ex;
    13                                               
    14                                                   int error_counter = 0;
    15                                                   int correct_counter = 0;
    16                                               
    17                                                   ALSU o1 (A,B,cin,serial_in,red_op_A,red_op_B,opcode,bypass_A,bypass_B,clk,rst,direction,leds,out);
    18                                                   ALSU_golden_model O4 (out_ex,leds_ex,A,B,opcode,clk,rst,cin,serial_in,red_op_A,red_op_B,bypass_A,bypass_B,direction);
    19                                               
    20                                               
    21              1                          1         ALU_class MY_ALU = new;
    22                                               
    23                                                       covergroup ALSU_G @(posedge clk);
    24                                               
    25                                                      label_A : coverpoint A {
    26                                                       bins A_data_0 = {0};
    27                                                       bins A_data_max = {MAXPOS};
    28                                                       bins A_data_min = {MAXNEG};
    29                                                       bins A_data_default = default;}  
    30                                               
    31                                                      label_A_red_op : coverpoint A iff (red_op_A) {
    32                                                       bins A_data_walking_ones[] = {1,2,4};}
    33                                               
    34                                                      label_B : coverpoint B {
    35                                                       bins B_data_0 = {0};
    36                                                       bins B_data_max = {MAXPOS};
    37                                                       bins B_data_min = {MAXNEG};
    38                                                       bins B_data_default = default;}  
    39                                               
    40                                                      label_B_red_op : coverpoint B iff (red_op_B) {
    41                                                       bins B_data_walking_ones[] = {1,2,4};}
    42                                               
    43                                                       label_opcode : coverpoint opcode {
    44                                                       bins bin_shift[] = {SHIFT,ROTATE};
    45                                                       bins bin_arith[] = {ADD,MULT};
    46                                                       bins bin_bitwise[] = {OR,XOR};
    47                                                       illegal_bins bin_invalid[] = {invalid6,invalid7};
    48                                                       bins opcode_tr = (0 => 1 => 2 => 3 => 4 => 5);}
    49                                               
    50                                                       endgroup
    51                                               
    52                                                       ALSU_G my_alu_g;
    53                                               
    54                                                       initial begin 
    55              1                          1               my_alu_g = new; 
    56                                                         end
    57                                               
    58              1                    1800612              always @(posedge clk) begin
    59                                                              if (!rst && !bypass_A && !bypass_B) begin
    60              1                    1470991                    my_alu_g.sample();
    61                                                         end
    62                                                        end
    63                                               
    64                                               
    65                                                       initial begin
    66              1                          1             clk = 0;
    67              1                          1             forever begin
    68              1                    3601225                 #1 clk = ~clk;
    68              2                    3601224     
    69                                                       end
    70                                                   end
    71                                               
    72                                                   initial begin
    73                                                       //1
    74              1                          1             cheack_reset;
    75                                               
    76                                                       //2
    77              1                          1             MY_ALU.OP_cns.constraint_mode(0);
    78              1                     900000             repeat (90000) begin
    79                                                           assert (MY_ALU.randomize());
    80              1                     900000                 rst = MY_ALU.rst;
    81              1                     900000                 red_op_A = MY_ALU.red_op_A;
    82              1                     900000                 red_op_B = MY_ALU.red_op_B;
    83              1                     900000                 bypass_A = MY_ALU.bypass_A;
    84              1                     900000                 bypass_B = MY_ALU.bypass_B;
    85              1                     900000                 direction = MY_ALU.direction;
    86              1                     900000                 cin = MY_ALU.cin;
    87              1                     900000                 serial_in = MY_ALU.serial;
    88              1                     900000                 A = MY_ALU.A;
    89              1                     900000                 B = MY_ALU.B;
    90              1                     900000                 opcode = MY_ALU.my_opcode;
    91              1                     900000                 cheack_result;
    92                                                       end
    93                                               
    94                                                       //3
    95              1                          1             cheack_reset;
    96                                               
    97                                                       //4
    98              1                          1             MY_ALU.OP_cns.constraint_mode(1);
    99              1                          1             MY_ALU.ALU_cns.constraint_mode(0);
    100             1                          1             rst = 0;
    101             1                          1             red_op_A = 0;
    102             1                          1             red_op_B = 0;
    103             1                          1             bypass_A = 0;
    104             1                          1             bypass_B = 0;
    105             1                     900000             repeat (900000) begin
    106                                                          assert (MY_ALU.randomize());
    107             1                     900000                 cheack_result ;
    108                                                      end
    109                                              
    110                                                      //5
    111             1                          1             cheack_reset;
    112                                                      //
    113             1                          1             opcode = 0;
    114             1                          6             repeat(6) begin
    115             1                          6                 @(negedge clk)
    116             1                          6                 opcode++;
    117                                                      end
    118                                              
    119                                                      //
    120             1                          7             foreach (MY_ALU.op[i]) begin
    121             1                          6         opcode = MY_ALU.op[i];
    122             1                        600         repeat (100) begin
    123                                                      assert (MY_ALU.randomize() with { my_opcode == opcode; });
    124             1                        600             cheack_result;
    125                                                  end
    126                                                      end
    127                                              
    128                                                  
    129                                              
    130             1                          1                 $display("error_counter = %d  correct_counter = %d",error_counter,correct_counter);
    131             1                          1                 $stop;  
    132                                                  end
    133                                              
    134                                                 task cheack_result ;
    135             1                    1800603           @(negedge clk);
    136                                                    if ((out_ex != out) || (leds_ex != leds)) begin
    137             1                    ***0***              $display("%t error",$time);
    138             1                    ***0***              error_counter++;
    139                                                    end
    140                                                    else 
    141             1                    1800603             correct_counter++;   
    142                                                     
    143                                                 endtask
    144                                              
    145                                                 task cheack_reset ;
    146             1                          3             rst = 0;
    147             1                          3             @(negedge clk);
    148             1                          3             cheack_result ;
    149             1                          3             rst = 1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        252       165        87    65.47%

================================Toggle Details================================

Toggle Coverage for instance /ALSU_tb --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                            A[0-2]           1           1      100.00 
                                            B[0-2]           1           1      100.00 
                                          bypass_A           1           1      100.00 
                                          bypass_B           1           1      100.00 
                                               cin           1           1      100.00 
                                               clk           1           1      100.00 
                             correct_counter[0-19]           1           1      100.00 
                               correct_counter[20]           0           1       50.00 
                            correct_counter[21-31]           0           0        0.00 
                                         direction           1           1      100.00 
                               error_counter[0-31]           0           0        0.00 
                                        leds[0-15]           1           1      100.00 
                                     leds_ex[0-15]           1           1      100.00 
                                       opcode[0-2]           1           1      100.00 
                                          out[0-5]           1           1      100.00 
                                       out_ex[0-5]           1           1      100.00 
                                          red_op_A           1           1      100.00 
                                          red_op_B           1           1      100.00 
                                               rst           1           1      100.00 
                                         serial_in           1           1      100.00 

Total Node Count     =        126 
Toggled Node Count   =         82 
Untoggled Node Count =         44 

Toggle Coverage      =      65.47% (165 of 252 bins)

COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /ALSU_tb/ALSU_G                                 100.00%        100          -    Covered              
    covered/total bins:                                    17         17          -                      
    missing/total bins:                                     0         17          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint label_A                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint label_A_red_op                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint label_B                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint label_B_red_op                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint label_opcode                           100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/ALSU_tb/my_alu_g               100.00%        100          -    Covered              
    covered/total bins:                                    17         17          -                      
    missing/total bins:                                     0         17          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint label_A                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                  2475270          1          -    Covered              
        bin A_data_max                                 113796          1          -    Covered              
        bin A_data_min                                 114206          1          -    Covered              
        default bin A_data_default                     568331                     -    Occurred             
    Coverpoint label_A_red_op                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_walking_ones[1]                      64062          1          -    Covered              
        bin A_data_walking_ones[2]                      64118          1          -    Covered              
    Coverpoint label_B                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_0                                  2475129          1          -    Covered              
        bin B_data_max                                 113446          1          -    Covered              
        bin B_data_min                                 113353          1          -    Covered              
        default bin B_data_default                     569675                     -    Occurred             
    Coverpoint label_B_red_op                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin B_data_walking_ones[1]                      63960          1          -    Covered              
        bin B_data_walking_ones[2]                      63774          1          -    Covered              
    Coverpoint label_opcode                           100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin bin_invalid[6]                      56681                     -    Occurred             
        illegal_bin bin_invalid[7]                      55807                     -    Occurred             
        bin bin_shift[4]                               271624          1          -    Covered              
        bin bin_shift[5]                               270690          1          -    Covered              
        bin bin_arith[2]                               272369          1          -    Covered              
        bin bin_arith[3]                              2071863          1          -    Covered              
        bin bin_bitwise[0]                                201          1          -    Covered              
        bin bin_bitwise[1]                             272366          1          -    Covered              
        bin opcode_tr                                       1          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/ALSU_tb/#ublk#102282978#78/immed__79
                     ALSU_tb.sv(79)                     0          1
/ALSU_tb/#ublk#102282978#105/immed__106
                     ALSU_tb.sv(106)                    0          1
/ALSU_tb/#anonblk#102282978#120#2#/#ublk#102282978#122/immed__123
                     ALSU_tb.sv(123)                    0          1

Total Coverage By Instance (filtered view): 86.47%

